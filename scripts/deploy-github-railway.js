#!/usr/bin/env node

console.log('🚀 DÉPLOIEMENT RAILWAY VIA GITHUB')
console.log('')
console.log('✅ Votre code est maintenant sur GitHub avec la configuration Railway !')
console.log('')
console.log('🔗 Repository: https://github.com/youssef10278/alami_gestion.git')
console.log('')
console.log('📋 ÉTAPES DE DÉPLOIEMENT :')
console.log('')
console.log('1️⃣ ACCÉDER À RAILWAY :')
console.log('   🌐 Allez sur : https://railway.app')
console.log('   🔑 Connectez-vous avec votre compte GitHub')
console.log('   📱 Ou créez un compte si vous n\'en avez pas')
console.log('')
console.log('2️⃣ CRÉER UN NOUVEAU PROJET :')
console.log('   ➕ Cliquez sur "New Project"')
console.log('   📂 Sélectionnez "Deploy from GitHub repo"')
console.log('   🔍 Cherchez "alami_gestion" dans vos repositories')
console.log('   ✅ Sélectionnez le repository')
console.log('')
console.log('3️⃣ AJOUTER UNE BASE DE DONNÉES :')
console.log('   🗄️ Dans votre projet Railway, cliquez sur "New"')
console.log('   📊 Sélectionnez "Database" → "PostgreSQL"')
console.log('   ⚡ Railway créera automatiquement une base PostgreSQL')
console.log('   🔗 La DATABASE_URL sera automatiquement configurée')
console.log('')
console.log('4️⃣ CONFIGURER LES VARIABLES D\'ENVIRONNEMENT :')
console.log('   ⚙️ Dans votre service, allez dans l\'onglet "Variables"')
console.log('   ➕ Ajoutez les variables suivantes :')
console.log('')
console.log('   🔐 JWT_SECRET')
console.log('   Valeur : Générez une chaîne sécurisée (32+ caractères)')
console.log('   Exemple : "votre-super-secret-jwt-key-change-this-in-production-123456789"')
console.log('')
console.log('   🌍 NODE_ENV')
console.log('   Valeur : production')
console.log('')
console.log('   🌐 NEXT_PUBLIC_APP_URL')
console.log('   Valeur : https://votre-app.railway.app (sera fournie après déploiement)')
console.log('')
console.log('5️⃣ DÉPLOIEMENT AUTOMATIQUE :')
console.log('   🚀 Railway détectera automatiquement votre railway.toml')
console.log('   📦 Le build commencera automatiquement')
console.log('   ⏱️ Attendez 3-5 minutes pour le premier déploiement')
console.log('   ✅ Votre app sera disponible sur une URL Railway')
console.log('')
console.log('6️⃣ MIGRATION DE LA BASE DE DONNÉES :')
console.log('   🔧 Une fois le déploiement terminé, dans l\'onglet "Deployments"')
console.log('   📱 Cliquez sur le dernier déploiement')
console.log('   💻 Ouvrez la "Console" ou "Shell"')
console.log('   ⌨️ Exécutez : npx prisma migrate deploy')
console.log('   📊 Ou si vous préférez : npx prisma db push')
console.log('')
console.log('7️⃣ CRÉER UN UTILISATEUR ADMIN :')
console.log('   💻 Dans la console Railway, exécutez :')
console.log('   👤 node scripts/create-owner.js')
console.log('   📝 Suivez les instructions pour créer votre compte admin')
console.log('')
console.log('8️⃣ CONFIGURATION DU DOMAINE (OPTIONNEL) :')
console.log('   🌐 Dans l\'onglet "Settings" de votre service')
console.log('   🔗 Section "Domains"')
console.log('   ➕ Ajoutez un domaine personnalisé si souhaité')
console.log('   📋 Ou utilisez le domaine Railway fourni')
console.log('')
console.log('🎯 VÉRIFICATIONS POST-DÉPLOIEMENT :')
console.log('')
console.log('   ✅ Health Check :')
console.log('   🌐 Visitez : https://votre-app.railway.app/api/health')
console.log('   📊 Devrait retourner : {"status":"healthy",...}')
console.log('')
console.log('   ✅ Application :')
console.log('   🏠 Visitez : https://votre-app.railway.app')
console.log('   🔄 Devrait rediriger vers /dashboard')
console.log('   🔑 Page de connexion devrait s\'afficher')
console.log('')
console.log('   ✅ Base de données :')
console.log('   💻 Console Railway : npx prisma studio')
console.log('   📊 Vérifiez que les tables sont créées')
console.log('')
console.log('🔄 DÉPLOIEMENT AUTOMATIQUE :')
console.log('')
console.log('   📝 Chaque push sur la branche main déclenchera :')
console.log('   1. 🔄 Rebuild automatique')
console.log('   2. 🚀 Redéploiement')
console.log('   3. ✅ Mise à jour de l\'application')
console.log('')
console.log('   💡 Pour désactiver : Settings → "Auto Deploy" → OFF')
console.log('')
console.log('🛠️ COMMANDES UTILES DANS LA CONSOLE RAILWAY :')
console.log('')
console.log('   📊 Voir les logs :')
console.log('   tail -f /app/.next/standalone/server.js')
console.log('')
console.log('   🗄️ Prisma Studio :')
console.log('   npx prisma studio --port 5555')
console.log('')
console.log('   🔄 Reset DB (ATTENTION - EFFACE TOUT) :')
console.log('   npx prisma migrate reset --force')
console.log('')
console.log('   📦 Vérifier les dépendances :')
console.log('   npm list')
console.log('')
console.log('🚨 DÉPANNAGE :')
console.log('')
console.log('   ❌ Erreur de build :')
console.log('   • Vérifiez les logs dans l\'onglet "Deployments"')
console.log('   • Assurez-vous que toutes les dépendances sont dans package.json')
console.log('   • Vérifiez que Prisma generate s\'exécute (script postinstall)')
console.log('')
console.log('   ❌ Erreur 503 Service Unavailable :')
console.log('   • Vérifiez que le port 3000 est exposé')
console.log('   • Vérifiez les variables d\'environnement')
console.log('   • Consultez les logs d\'application')
console.log('')
console.log('   ❌ Erreur de base de données :')
console.log('   • Vérifiez que PostgreSQL est ajouté au projet')
console.log('   • Vérifiez que DATABASE_URL est automatiquement configurée')
console.log('   • Exécutez les migrations : npx prisma migrate deploy')
console.log('')
console.log('   ❌ Erreur de connexion :')
console.log('   • Vérifiez JWT_SECRET dans les variables')
console.log('   • Vérifiez NEXT_PUBLIC_APP_URL')
console.log('   • Créez un utilisateur admin avec create-owner.js')
console.log('')
console.log('💰 COÛTS RAILWAY :')
console.log('')
console.log('   🆓 Plan gratuit :')
console.log('   • $5 de crédit gratuit par mois')
console.log('   • Parfait pour tester et développer')
console.log('   • Pas de carte de crédit requise')
console.log('')
console.log('   💳 Plan payant :')
console.log('   • $5/mois par service actif')
console.log('   • Ressources illimitées')
console.log('   • Support prioritaire')
console.log('')
console.log('🔒 SÉCURITÉ :')
console.log('')
console.log('   ✅ HTTPS automatique')
console.log('   ✅ Variables d\'environnement chiffrées')
console.log('   ✅ Isolation des services')
console.log('   ✅ Sauvegardes automatiques de la DB')
console.log('')
console.log('📈 MONITORING :')
console.log('')
console.log('   📊 Métriques disponibles :')
console.log('   • CPU et mémoire')
console.log('   • Trafic réseau')
console.log('   • Temps de réponse')
console.log('   • Logs en temps réel')
console.log('')
console.log('🎉 FÉLICITATIONS !')
console.log('')
console.log('✨ Votre application Alami Gestion sera bientôt déployée !')
console.log('🌐 Accessible depuis n\'importe où dans le monde')
console.log('🔄 Déploiement automatique à chaque push GitHub')
console.log('🗄️ Base de données PostgreSQL managée')
console.log('🔒 HTTPS et sécurité intégrés')
console.log('')
console.log('🔗 LIENS UTILES :')
console.log('')
console.log('   🎯 Railway Dashboard : https://railway.app/dashboard')
console.log('   📚 Documentation : https://docs.railway.app')
console.log('   💬 Support : https://help.railway.app')
console.log('   🐙 Votre repo : https://github.com/youssef10278/alami_gestion')
console.log('')
console.log('🚀 Bon déploiement !')
