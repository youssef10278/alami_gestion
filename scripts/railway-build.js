#!/usr/bin/env node

/**
 * Script de build personnalis√© pour Railway
 * R√©sout automatiquement les migrations √©chou√©es avant le d√©ploiement
 */

const { execSync } = require('child_process')
const { PrismaClient } = require('@prisma/client')

async function railwayBuild() {
  console.log('üöÄ === D√âPLOIEMENT RAILWAY AVEC R√âSOLUTION MIGRATION ===')
  
  try {
    // √âtape 1: R√©soudre la migration √©chou√©e
    console.log('üîß 1. R√©solution des migrations √©chou√©es...')
    
    const prisma = new PrismaClient()
    
    try {
      // V√©rifier s'il y a des migrations √©chou√©es
      const failedMigrations = await prisma.$queryRaw`
        SELECT migration_name, started_at, finished_at 
        FROM "_prisma_migrations" 
        WHERE finished_at IS NULL;
      `
      
      if (failedMigrations.length > 0) {
        console.log('‚ö†Ô∏è Migrations √©chou√©es d√©tect√©es:', failedMigrations.map(m => m.migration_name))
        
        // Marquer sp√©cifiquement notre migration √©chou√©e comme r√©solue
        await prisma.$executeRaw`
          UPDATE "_prisma_migrations" 
          SET finished_at = NOW(), 
              logs = 'Migration manually resolved during Railway deployment - replaced by newer version'
          WHERE migration_name = '20251013104557_add_product_return_system' 
          AND finished_at IS NULL;
        `
        
        console.log('‚úÖ Migration √©chou√©e marqu√©e comme r√©solue')
      } else {
        console.log('‚úÖ Aucune migration √©chou√©e d√©tect√©e')
      }
      
    } catch (error) {
      console.log('‚ö†Ô∏è Erreur lors de la v√©rification des migrations (normal si premi√®re fois):', error.message)
    } finally {
      await prisma.$disconnect()
    }
    
    // √âtape 2: Appliquer les nouvelles migrations
    console.log('üîÑ 2. Application des nouvelles migrations...')
    execSync('npx prisma migrate deploy', { stdio: 'inherit' })
    
    // √âtape 3: G√©n√©rer le client Prisma
    console.log('‚öôÔ∏è 3. G√©n√©ration du client Prisma...')
    execSync('npx prisma generate', { stdio: 'inherit' })
    
    // √âtape 4: Build de l'application
    console.log('üèóÔ∏è 4. Build de l'application Next.js...')
    execSync('npm run build', { stdio: 'inherit' })
    
    console.log('üéâ === D√âPLOIEMENT RAILWAY TERMIN√â AVEC SUCC√àS ===')
    
  } catch (error) {
    console.error('‚ùå Erreur lors du d√©ploiement Railway:', error)
    process.exit(1)
  }
}

// Ex√©cuter le script
railwayBuild()
