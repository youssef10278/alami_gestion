#!/usr/bin/env node

console.log('üîç DEBUG - Analyse des mouvements de stock\n');

// Simuler un appel √† l'API pour v√©rifier les mouvements
const testStockMovements = async () => {
  console.log('üìä V√âRIFICATION DES MOUVEMENTS DE STOCK:');
  console.log('');
  
  console.log('1Ô∏è‚É£ STRUCTURE ATTENDUE:');
  console.log('   ‚Ä¢ Table: StockMovement');
  console.log('   ‚Ä¢ Champs: id, productId, quantity, type, reason, reference, createdAt');
  console.log('   ‚Ä¢ Types: IN (entr√©e), OUT (sortie)');
  console.log('   ‚Ä¢ Raisons: "Stock initial", "Vente #xxx", "Ajout manuel", etc.');
  console.log('');
  
  console.log('2Ô∏è‚É£ CR√âATION AUTOMATIQUE:');
  console.log('   ‚úÖ Cr√©ation produit avec stock > 0 ‚Üí mouvement "Stock initial"');
  console.log('   ‚úÖ Vente ‚Üí mouvement "Vente #xxx" (type OUT)');
  console.log('   ‚úÖ Ajout manuel ‚Üí mouvement "Ajout manuel" (type IN)');
  console.log('');
  
  console.log('3Ô∏è‚É£ PROBL√àME IDENTIFI√â:');
  console.log('   ‚ùå Le code utilise userId dans StockMovement');
  console.log('   ‚ùå Mais le mod√®le Prisma n\'a pas de champ userId');
  console.log('   ‚ùå Cela peut causer des erreurs lors de la cr√©ation');
  console.log('');
  
  console.log('4Ô∏è‚É£ V√âRIFICATIONS √Ä FAIRE:');
  console.log('   ‚Ä¢ V√©rifier si des mouvements existent en base');
  console.log('   ‚Ä¢ Tester l\'API /api/stock/movements');
  console.log('   ‚Ä¢ V√©rifier les logs d\'erreur lors des ventes');
  console.log('   ‚Ä¢ Corriger le probl√®me userId si n√©cessaire');
  console.log('');
  
  console.log('üîß SOLUTIONS POSSIBLES:');
  console.log('');
  
  console.log('OPTION A - Supprimer userId du code:');
  console.log('   ‚Ä¢ Modifier app/api/stock/movements/route.ts');
  console.log('   ‚Ä¢ Supprimer userId: session.userId des cr√©ations');
  console.log('   ‚Ä¢ Supprimer l\'include user des requ√™tes');
  console.log('');
  
  console.log('OPTION B - Ajouter userId au mod√®le:');
  console.log('   ‚Ä¢ Ajouter userId String? au mod√®le StockMovement');
  console.log('   ‚Ä¢ Cr√©er une migration Prisma');
  console.log('   ‚Ä¢ Ajouter la relation avec User');
  console.log('');
  
  console.log('üìã TESTS RECOMMAND√âS:');
  console.log('   1. Cr√©er un produit avec stock initial');
  console.log('   2. Faire une vente');
  console.log('   3. V√©rifier la page /dashboard/stock');
  console.log('   4. Contr√¥ler les mouvements r√©cents');
  console.log('');
  
  console.log('üéØ DIAGNOSTIC RAPIDE:');
  console.log('   Si "Aucun mouvement r√©cent" s\'affiche:');
  console.log('   ‚Üí Les mouvements ne sont pas cr√©√©s en base');
  console.log('   ‚Üí Erreur silencieuse lors des ventes');
  console.log('   ‚Üí Probl√®me avec le champ userId manquant');
  console.log('');
};

testStockMovements();

console.log('üí° PROCHAINE √âTAPE:');
console.log('   Corriger le probl√®me userId pour permettre la cr√©ation des mouvements');
console.log('');
